package com.Advance.Network.DataFormatExchange;

/**
 * JSON文档结构
 * */
public class JSONDocumentStructure {
    /**
        JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。
        所谓轻量级，是与XML文档结构相比而言的，描述项目的字符少，
        所以描述相同数据所需的字符个数要少，那么传输速度就会提高，而流量却会减少。
        由于Web和移动平台开发对流量的要求是要尽可能少，对速度的要求是要尽可能快，
        而轻量级的数据交换格式JSON就成为理想的数据交换格式。
        构成JSON文档的两种结构为对象和数组。对象是“名称-值”对集合，它类似于Java中Map类型，而数组是一连串元素的集合。

        对象是一个无序的“名称/值”对集合，一个对象以{（左括号）开始，}（右括号）结束。
        每个“名称”后跟一个:（冒号），“名称-值”对之间使用,（逗号）分隔。JSON对象的语法表如下图所示。
                 |------------------------------------------------|
                 |                                                |
        |-- { ----------- String -------- : -------- value ----------- } --|
                    |                                          |
                    |-------------------- , -------------------|
        下面是一个JSON对象的例子:
        {
            "name":"a.htm",
            "size":345,
            "saved":true
        }


        数组是值的有序集合，以[（左中括号）开始，]（右中括号）结束，值之间使用,（逗号）分隔。
        JSON数组的语法表如下图所示。
                 |------------------------------------------------|
                 |                                                |
        |-- [ ------------------------ value ------------------------- ] --|
                    |                                          |
                    |-------------------- , -------------------|
        下面是一个JSON数组的例子：
        ["text","html","css"]

        在数组中，值可以是双引号括起来的字符串、数值、true、false、null、对象或者数组，
        而且这些结构可以嵌套。数组中值的JSON语法结构如下图所示
        |------------------------- String -------------------------|
                |----------------- number -----------------|
                |----------------- object -----------------|
                |----------------- array  -----------------|
                |-----------------  true  -----------------|
                |----------------- false  -----------------|
                |-----------------  null  -----------------|
        下面是一个JSON数组内嵌套数组的例子：
        [
            "abc",
            123,
            {
                "name":"a.htm",
                "size":345,
                "saved":true
            },
            ["text","html","css"],
            true,
            false,
            null
        ]


        由于目前Java官方没有提供JSON编码和解码所需要的类库，所以需要使用第三方JSON库，
        推荐JSON-java库，JSON-java库提供源代码，最重要的是不依赖于其他第三方库，不需要再起找其他的库了。
        可以在  https://github.com/stleary/JSON-java  下载源代码。
        API在线文档  http://stleary.github.io/JSON-java/index.html
        或者在maven配置文件中添加依赖
        <!-- https://mvnrepository.com/artifact/org.json/json -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20220320</version>
        </dependency>
     */
}
